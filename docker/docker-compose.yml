version: '2.1'
name: services
services:
  databaseteam:
    image: postgres:latest
    ports:
      - "5433:5433"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "saop_prod_team"
      POSTGRES_HOST_AUTH_METHOD: trust 
      PGPORT: 5433
    networks:
      backend:
        aliases:
          - "database team"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: saop/configserver:0.0.1-SNAPSHOT
    ports:
       - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
  teamservice:
    image: saop/teamservice:0.0.2-SNAPSHOT
    environment:
      PROFILE: "prod-team"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5433"
    depends_on:
      databaseteam:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend
  databasepractice:
    image: postgres:latest
    ports:
      - "5435:5435"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "saop_prod_practice"
      POSTGRES_HOST_AUTH_METHOD: trust 
      PGPORT: 5435
    networks:
      backend:
        aliases:
          - "database practice"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  practiceservice:
    image: saop/practiceservice:0.0.2-SNAPSHOT
    environment:
      PROFILE: "prod-practice"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5435"
    depends_on:
      databasepractice:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - backend
  databaseplayermetric:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "saop_prod"
      POSTGRES_HOST_AUTH_METHOD: trust 
    networks:
      backend:
        aliases:
          - "database playermetric"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  playermetricservice:
    image: saop/playermetricservice:0.0.2-SNAPSHOT
    environment:
      PROFILE: "prod"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      databaseplayermetric:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend
  databaseperson:
    image: postgres:latest
    ports:
      - "5434:5434"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "saop_prod_person"
      POSTGRES_HOST_AUTH_METHOD: trust 
      PGPORT: 5434
    networks:
      backend:
        aliases:
          - "database person"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  personservice:
    image: saop/personservice:0.0.2-SNAPSHOT
    environment:
      PROFILE: "prod-person"
      CONFIGSERVER_URI: "http://configserver:8073"
      CONFIGSERVER_PORT:   "8073"
      DATABASESERVER_PORT: "5434"
    depends_on:
      databaseperson:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - backend


networks:
  backend:
    driver: bridge